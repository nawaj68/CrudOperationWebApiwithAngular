// <auto-generated />
using System;
using CrudOperationApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CrudOperationApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230123072102_InitialDatabase")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CrudOperation.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityName = "Dhanmondi",
                            StateId = 1
                        },
                        new
                        {
                            Id = 2,
                            CityName = "Mohammadpur",
                            StateId = 1
                        },
                        new
                        {
                            Id = 3,
                            CityName = "Nator",
                            StateId = 2
                        },
                        new
                        {
                            Id = 4,
                            CityName = "Sirajgonj",
                            StateId = 2
                        },
                        new
                        {
                            Id = 5,
                            CityName = "Jamalpur",
                            StateId = 3
                        },
                        new
                        {
                            Id = 6,
                            CityName = "Sharpur",
                            StateId = 3
                        },
                        new
                        {
                            Id = 7,
                            CityName = "San Francisco",
                            StateId = 4
                        },
                        new
                        {
                            Id = 8,
                            CityName = "Los Angeles",
                            StateId = 4
                        },
                        new
                        {
                            Id = 9,
                            CityName = "Seattle",
                            StateId = 5
                        },
                        new
                        {
                            Id = 10,
                            CityName = "Spokane",
                            StateId = 5
                        },
                        new
                        {
                            Id = 11,
                            CityName = "Central Park",
                            StateId = 6
                        },
                        new
                        {
                            Id = 12,
                            CityName = "New York City",
                            StateId = 6
                        });
                });

            modelBuilder.Entity("CrudOperation.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryName = "Bangladesh"
                        },
                        new
                        {
                            Id = 2,
                            CountryName = "United States"
                        });
                });

            modelBuilder.Entity("CrudOperation.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Bsc")
                        .HasColumnType("bit");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Hsc")
                        .HasColumnType("bit");

                    b.Property<bool>("Msc")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ssc")
                        .HasColumnType("bit");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CrudOperation.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            StateName = "Dhaka"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            StateName = "Rajshahi"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            StateName = "Mymensingh"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 2,
                            StateName = "California"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 2,
                            StateName = "Washington"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 2,
                            StateName = "New York"
                        });
                });

            modelBuilder.Entity("CrudOperation.Models.City", b =>
                {
                    b.HasOne("CrudOperation.Models.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("CrudOperation.Models.Employee", b =>
                {
                    b.HasOne("CrudOperation.Models.City", "City")
                        .WithMany("Employees")
                        .HasForeignKey("CityId");

                    b.HasOne("CrudOperation.Models.Country", "Country")
                        .WithMany("Employees")
                        .HasForeignKey("CountryId");

                    b.HasOne("CrudOperation.Models.State", "State")
                        .WithMany("Employees")
                        .HasForeignKey("StateId");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("State");
                });

            modelBuilder.Entity("CrudOperation.Models.State", b =>
                {
                    b.HasOne("CrudOperation.Models.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CrudOperation.Models.City", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CrudOperation.Models.Country", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("States");
                });

            modelBuilder.Entity("CrudOperation.Models.State", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
